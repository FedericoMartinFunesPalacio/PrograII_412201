// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Problema2_7_412201_IngIndirecta.Models;

public partial class Problema2_7Context : DbContext
{
    public Problema2_7Context(DbContextOptions<Problema2_7Context> options)
        : base(options)
    {
    }

    public virtual DbSet<DetalleTurnos> DetalleTurnos { get; set; }

    public virtual DbSet<Servicios> Servicios { get; set; }

    public virtual DbSet<Turnos> Turnos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DetalleTurnos>(entity =>
        {
            entity.HasKey(e => e.IdDetalle).HasName("pkD");

            entity.Property(e => e.IdDetalle).HasColumnName("id_detalle");
            entity.Property(e => e.IdServicio).HasColumnName("id_servicio");
            entity.Property(e => e.IdTurno).HasColumnName("id_turno");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("observaciones");

            entity.HasOne(d => d.IdServicioNavigation).WithMany(p => p.DetalleTurnos)
                .HasForeignKey(d => d.IdServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fkS");

            entity.HasOne(d => d.IdTurnoNavigation).WithMany(p => p.DetalleTurnos)
                .HasForeignKey(d => d.IdTurno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fkT");
        });

        modelBuilder.Entity<Servicios>(entity =>
        {
            entity.HasKey(e => e.IdServicio).HasName("pkS");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Turnos>(entity =>
        {
            entity.HasKey(e => e.IdTurno).HasName("pkT");

            entity.Property(e => e.IdTurno).HasColumnName("id_turno");
            entity.Property(e => e.Cliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cliente");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}